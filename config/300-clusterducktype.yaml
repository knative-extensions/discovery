# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterducktypes.discovery.knative.dev
  labels:
    discovery.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: discovery.knative.dev
  versions:
    - &version
      name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              description: Spec holds the desired state of the ClusterDuckType (from the
                client).
              type: object
              properties:
                group:
                  description: Group is the API group of the defined duck type. Must
                    match the name of the ClusterDuckType (in the form `<names.plural>.<group>`).
                  type: string
                names:
                  description: Names holds the naming conventions for this duck type.
                  type: object
                  properties:
                    name:
                      description: Name is the serialized name of the resource.
                        It is normally CamelCase and singular.
                      type: string
                    plural:
                      description: Plural is the plural name of the duck type. Must
                        match the name of the ClusterDuckType (in the form `<names.plural>.<group>`).
                        Must be all lowercase.
                      type: string
                    singular:
                      description: Singular is the singular name of the duck type.
                        It must be all lowercase. Defaults to lowercased `name`.
                      type: string
                selectors:
                  description: Selectors is a list of selectors for CustomResourceDefinitions
                    to identify a duck type.
                  type: array
                  items:
                    type: object
                versions:
                  description: Versions holds the schema and printer column mappings
                    for specific versions for duck types.
                  type: array
                  items:
                    type: object
            status:
              description: Status communicates the observed state of the ClusterDuckType
                (from the controller).
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                conditions:
                  description: Conditions the latest available observations of a resource's
                    current state.
                  type: array
                  items:
                    type: object
                duckCount:
                  description: DuckCount is the count of unique duck types found post-hunt.
                  type: integer
                  format: int32
                ducks:
                  description: Ducks is a versioned mapping of the found resources that
                    implement this duck.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: Short Name
          type: string
          jsonPath: .spec.names.name
        - name: Ducks
          type: integer
          jsonPath: .status.duckCount
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
  names:
    kind: ClusterDuckType
    plural: clusterducktypes
    singular: clusterducktype
    categories:
    - all
    - knative
    shortNames:
    - cducks
  scope: Cluster
